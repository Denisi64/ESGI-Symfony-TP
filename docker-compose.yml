version: '3.8'

services:
  # Service pour le serveur PHP (Symfony)
  app:
    image: php:8.2-fpm  # Utiliser PHP 8.2
    container_name: symfony_app
    working_dir: /var/www/symfony
    volumes:
      - .:/var/www/symfony
    environment:
      - PHP_INI_DIR=/usr/local/etc/php
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG="client_host=host.docker.internal"
    networks:
      - symfony_network

  # Service pour Nginx
  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/symfony
    depends_on:
      - app
    networks:
      - symfony_network

  # Service pour MySQL
  db:
    image: mysql:5.7
    container_name: symfony_db
    environment:
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - symfony_network

  # Service pour phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: symfony_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: user
      PMA_PASSWORD: password
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - symfony_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  db_data:

networks:
  symfony_network:
    driver: bridge

